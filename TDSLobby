local socket = Krnl.WebSocket.connect("ws://127.0.0.1:8088/Echo")
socket:Send("Connected to lobby client")

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RemoteFunction = ReplicatedStorage.RemoteFunction

local availableMaps = {
	["Toyboard"] = true,
}

print("Starting TDS Bot Lobby script")

--Look for elevator

local foundElevator = false

local Elevators = workspace.Elevators

local function joinElevator(elevator, map)
	foundElevator = true

	RemoteFunction:InvokeServer("Elevators", "Enter", elevator)
	print("Entering elevator, map: " .. map)

	socket:Send("Entering elevator, map: " .. map)

	game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = elevator.Lift:GetPrimaryPartCFrame() + Vector3.new(0, 3, 0)
end

for _, elevator in pairs (Elevators:GetChildren()) do
	local settings = require(elevator:WaitForChild("Settings"))

	if settings.Type == "Survival" then
		local state = elevator:FindFirstChild("State")
		if state and state:FindFirstChild("Map") then
			local MapTitleValue = state:FindFirstChild("Map"):FindFirstChild("Title")
			
			if availableMaps[MapTitleValue.Value] and not foundElevator then
				joinElevator(elevator, MapTitleValue.Value)
			end

			MapTitleValue.Changed:Connect(function(map)
				if availableMaps[map] and not foundElevator then
					joinElevator(elevator, map)

					--[[
					task.spawn(function()
						task.wait(20)
						--socket:Send("joiningmap")
					end)
					]]--
				end
			end)
		end
	end
end
